package tg_service

import (
	"bytes"
	"encoding/json"
	"fmt"
	"io"
	"myapp/internal/models"
	"myapp/pkg/files"
	my_regex "myapp/pkg/regex"
	"net/http"
	"strconv"
	"strings"
	"time"
)

func (srv *TgService) HandleMessage(m models.Update) error {
	msgText := m.Message.Text
	fromUsername := m.Message.From.UserName
	fromId := m.Message.From.Id
	srv.l.Info(fmt.Sprintf("HandleMessage: fromId-%d fromUsername-%s, msgText-%s", fromId, fromUsername, msgText))

	srv.SendMsgToServer(fromId, "user", msgText)

	if msgText == "/admin" {
		err := srv.M_admin(m)
		if err != nil {
			srv.SendMessage(fromId, ERR_MSG)
			srv.SendMessage(fromId, err.Error())
		}
		return err
	}

	user, err := srv.Db.GetUserById(fromId)
	if err != nil {
		return fmt.Errorf("HandleMessage GetUserById err: %v", err)
	}
	// if user.Id != 0 && user.Lives == 0 {
	// 	return nil
	// }

	if msgText == "/help" {
		srv.SendMessageAndDb(fromId, "@millioner_support\n–≤–æ—Ç –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏")
		srv.Db.UpdateLatsActiontime(fromId)
		srv.Db.UpdateFeedbackTime(fromId)
		return nil
	}

	if msgText == "–ù–∞–ø–∏—Å–∞—Ç—å –ú–∞—Ä–∫—É" {
		user, _ := srv.Db.GetUserById(fromId)
		lichka := user.Lichka
		if lichka == "" {
			lichka = "https://t.me/markodinncov"
		}
		lichkaUrl := fmt.Sprintf("https://t.me/%s", srv.DelAt(lichka))
		messText := "–ï—Å–ª–∏ —É —Ç–µ–±—è –∏–º–µ—é—Ç—Å—è –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã - —Å–º–µ–ª–æ –∑–∞–¥–∞–≤–∞–π –º–Ω–µ –∏—Ö –≤ –ª—Å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ üëáüèª"
		reply_markup := fmt.Sprintf(`{"inline_keyboard" : [
			[{ "text": "–ù–∞–ø–∏—Å–∞—Ç—å –ú–∞—Ä–∫—É", "url": "%s" }]
		]}`, lichkaUrl)
		srv.SendMessageWRM(fromId, messText, reply_markup)
		return nil
	}

	if msgText == "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã" {
		srv.CQ_frequently_questions_btn(m)
		return nil
	}



	if user.IsLastPush == 1 {
		srv.SendMessageAndDb(fromId, "–±–æ—Ç –≤–∞–º –±–æ–ª—å—à–µ –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
		return nil
	}

	if strings.HasPrefix(msgText, "/start") { // https://t.me/tgbotusername?start=ref01 -> /start ref01
		err := srv.M_start(m)
		if err != nil {
			srv.SendMessageAndDb(fromId, ERR_MSG)
			srv.SendMessageAndDb(fromId, err.Error())
		}
		srv.Db.UpdateLatsActiontime(fromId)
		srv.Db.UpdateFeedbackTime(fromId)
		return err
	}

	if strings.HasPrefix(msgText, "add_am_") { // add_am_1.1_
		animMessId := my_regex.GetStringInBetween(msgText, "add_am_", "_")
		if animMessId == "" {
			return fmt.Errorf("–Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω—ã–π animMessId")
		}
		srv.Db.EditBotState(fromId, msgText)
		srv.SendMessage(fromId, fmt.Sprintf("–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—Å—Ç–∞ –¥–ª—è animMessId %v", animMessId))
		return nil
	}

	err = srv.M_state(m)
	if err != nil {
		srv.SendMessageAndDb(fromId, ERR_MSG)
		srv.SendMessageAndDb(fromId, err.Error())
	}
	srv.Db.UpdateLatsActiontime(fromId)
	srv.Db.UpdateFeedbackTime(fromId)
	return err
}

func (srv *TgService) M_start(m models.Update) error {
	fromId := m.Message.Chat.Id
	msgText := m.Message.Text
	fromFirstName := m.Message.From.FirstName
	fromUsername := m.Message.From.UserName
	srv.l.Info(fmt.Sprintf("M_start: fromId: %d, fromUsername: %s, msgText: %s", fromId, fromUsername, msgText))

	refArr := strings.Split(msgText, " ")
	ref := ""
	if len(refArr) > 1 {
		ref = refArr[1]
	}

	// user, err := srv.Db.GetUserById(fromId)
	// if err != nil {
	// 	return fmt.Errorf("M_start GetUserById err: %v", err)
	// }
	// if user.CreatedAt != "" && srv.IsIgnoreUser(fromId) {
	// 	text := "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ –∏ –±–æ—Ç –¥–ª—è –≤–∞—Å –±–æ–ª—å—à–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.\n–í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /help"
	// 	srv.SendMessageAndDb(fromId, text)
	// 	return nil
	// }

	err := srv.Db.AddNewUser(fromId, fromUsername, fromFirstName)
	if err != nil {
		return fmt.Errorf("M_start AddNewUser err: %v", err)
	}
	srv.Db.EditRef(fromId, ref)
	lichka := "odincovmarkk"
	if ref == "ref15" {
		lichka = "markodinncov"
	}
	srv.Db.EditLichka(fromId, lichka)
	if fromId == 1394096901 {
		srv.Db.EditAdmin(fromId, 1)
	}
	srv.Db.EditBotState(fromId, "")
	srv.Db.EditLives(fromId, 3)
	srv.Db.EditStep(fromId, "1")
	// srv.SendMessageAndDb(fromId, fmt.Sprintf("–ü—Ä–∏–≤–µ—Ç, %s üëã", fromFirstName))
	// srv.SendAnimMessageHTML("1", fromId, animTimeout3000)

	// time.Sleep(time.Millisecond * time.Duration(animTimeoutTest))

	// text := "–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞—á–∏–Ω–∞–π –∏–≥—Ä—É –∏ –∑–∞–±–∏—Ä–∞–π –±–æ–Ω—É—Å 1000‚ÇΩ –∑–∞ —É–≤–µ—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç! üöÄ"
	// replyMarkup := `{"inline_keyboard" : [
	// 	[{ "text": "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", "callback_data": "start_game" }]
	// ]}`
	// srv.SendMessageWRM(fromId, text, replyMarkup)
	
	// srv.SendMsgToServer(fromId, "bot", text)

	futureJson := map[string]string{
		"video_note":   fmt.Sprintf("@%s", "./files/krug_1.mp4"),
		"chat_id": strconv.Itoa(fromId),
	}
	cf, body, err := files.CreateForm(futureJson)
	if err != nil {
		return fmt.Errorf("HandleVideoNote CreateFormV2 err: %v", err)
	}
	srv.SendVideoNote(body, cf)

	srv.Db.EditBotState(fromId, "read_article_after_KNB_win")
	time.Sleep(time.Second*20)
	srv.SendMessage(fromId, "–í–≤–µ–¥–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∏–∂–µ üëáüèª")

	return nil
}

func (srv *TgService) M_state(m models.Update) error {
	fromId := m.Message.Chat.Id
	msgText := m.Message.Text
	fromUsername := m.Message.From.UserName
	fromFirstName := m.Message.From.FirstName
	srv.l.Info(fmt.Sprintf("M_state: fromId: %d, fromUsername: %s, msgText: %s", fromId, fromUsername, msgText))

	user, err := srv.Db.GetUserById(fromId)
	if err != nil {
		srv.l.Warn(fmt.Errorf("M_state GetUserById err: %v", err))
	}
	srv.Db.UpdateLatsActiontime(fromId)
	if user.BotState == "" {
		return nil
	}

	if strings.HasPrefix(user.BotState, "add_am_") {
		animMessId := my_regex.GetStringInBetween(user.BotState, "add_am_", "_")
		animMess, err := srv.Db.GetAminMessByTxtId(animMessId)
		if err != nil {
			return fmt.Errorf("M_state GetAminMessByTxtId err: %v", err)
		}

		srv.l.Info("m.Message.Entities:", m.Message.Entities)
		srv.SendMessage(fromId, fmt.Sprintf("%+v", m.Message.Entities))

		// for _, v := range m.Message.Entities {
		// 	entityType := v.Type
		// 	entityStart := v.Offset
		// 	entityEnd := v.Offset + v.Length
		// 	var entityStartSymb string
		// 	var entityEndSymb string
		// 	if entityType == "bold" {
		// 		entityStartSymb = "<b>"
		// 		entityEndSymb = "</b>"
		// 	}
		// 	if entityType == "underline" {
		// 		entityStartSymb = "<u>"
		// 		entityEndSymb = "</u>"
		// 	}
		// 	for i := len([]rune(msgText)); i > 0; i-- {
		// 		if i == entityEnd 
		// 	}
		// }

		if animMess.TxtId != "" {
			err = srv.Db.EditAnimMessText(animMessId, msgText)
			if err != nil {
				return fmt.Errorf("M_state EditAnimMessText err: %v", err)
			}
			srv.SendMessage(fromId, "–ø–æ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω")
			srv.Db.EditBotState(fromId, "")
			return nil
		}
		err = srv.Db.AddNewAminMess(animMessId, msgText)
		if err != nil {
			return fmt.Errorf("M_state AddNewAminMess err: %v", err)
		}
		srv.SendMessage(fromId, "–ø–æ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω")
		srv.Db.EditBotState(fromId, "")
		return nil
	}

	if user.BotState == "read_article_after_KNB_win" { // –ì–æ, –∫–æ, –∫–æ—É, –≥–æ—É, –≥—ç—É
		if !strings.HasPrefix(strings.ToLower(msgText), "–≥–æ") && !strings.HasPrefix(strings.ToLower(msgText), "–∫–æ") && !strings.HasPrefix(strings.ToLower(msgText), "–≥—ç") && !strings.HasPrefix(strings.ToLower(msgText), "go") {
			srv.SendMessageAndDb(fromId, "‚ùå –í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤–µ—Ä—å—Ç–µ—Å—å —Å –ª–æ–Ω–≥—Ä–∏–¥–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
			return nil
		}

		srv.Db.EditBotState(fromId, "")
		// srv.SendAnimMessage("-1", fromId, animTimeout250)
		// srv.SendBalance(fromId, "30.000", animTimeout250)
		// srv.Db.EditStep(fromId, "9")
		// srv.SendAnimMessageHTML("9", fromId, animTimeoutTest)

		text := "–ù—É —á—Ç–æ, –ø–æ–µ—Ö–∞–ª–∏, –æ—Ç–≤–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ 3 –≤–æ–ø—Ä–æ—Å–∞ –∏ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è —Å–º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç 500.000‚ÇΩ üòè"
		srv.SendMessage(fromId, text)
		err = srv.ShowMilQ(fromId, 1)
		if err != nil {
			return fmt.Errorf("M_state ShowMilQ err: %v", err)
		}

		// text := "–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å üòè\n–ó–∞ –Ω–µ–≥–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å +25.000‚ÇΩ –∫ –±–∞–Ω–∫—Éüí∏"
		// replyMarkup :=`{"inline_keyboard" : [
		// 	[ { "text": "–î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º", "callback_data": "show_q_3_" } ]
		// ]}`
		// srv.SendMessageWRM(fromId, text, replyMarkup)

		// srv.ShowMilQ(fromId, 2)
		// srv.Db.EditStep(fromId, "7")
		// srv.SendMsgToServer(fromId, "bot", text)
		return nil
	}

	if user.BotState == "wait_email" {
		msgTextEmail := msgText
		url := fmt.Sprintf("%s/api/v1/user?email=%s", srv.Cfg.ServerUrl, msgTextEmail)
		srv.l.Info("M_state wait_email –∏–¥—É –∫ API", url)
		response, err := http.Get(url)
		if err != nil {
			return fmt.Errorf("M_state wait_email Post err: %v", err)
		}
		srv.l.Info("M_state wait_email —Å—Ö–æ–¥–∏–ª –∫ API")
		defer response.Body.Close()
	
		if response.StatusCode != http.StatusOK {
			bodyBytes, err := io.ReadAll(response.Body)
			if err != nil {
				return fmt.Errorf("M_state wait_email ReadAll err: %v", err)
			}
			return fmt.Errorf("M_state wait_email post %s bad response: [%d] %v", url, response.StatusCode, string(bodyBytes))
		}
	
		bodyBytes, err := io.ReadAll(response.Body)
		if err != nil {
			return fmt.Errorf("M_state wait_email ReadAll err: %v", err)
		}
	
		resp := struct{
			Status string `json:"status"`
			Data   string `json:"data"`
		}{}
		json.Unmarshal(bodyBytes, &resp)
	
		if resp.Status == "success" {

			srv.Db.EditBotState(fromId, "")
			srv.Db.EditEmail(fromId, msgTextEmail)
			user, _ := srv.Db.GetUserById(fromId)
			lichkaId := 6405739421
			if srv.DelAt(user.Lichka) == "markodinncov" {
				lichkaId = 6328098519
			}
			// lichka, tgId,  _ := srv.GetLichka()
			// srv.Db.EditLichka(fromId, lichka)
			// mess := fmt.Sprintf("–í–∞—à–∞ –ª–∏—á–∫–∞ %s", srv.AddAt(lichka))
			// srv.SendMessage(fromId, mess)

			url := fmt.Sprintf("%s/api/v1/lichka", srv.Cfg.ServerUrl)
			jsonBody := []byte(fmt.Sprintf(`{"lichka":"%s", "tg_id":"%d", "tg_username":"%s", "tg_name":"%s", "email":"%s"}`, user.Lichka, lichkaId, fromUsername, fromFirstName, msgTextEmail))
			bodyReader := bytes.NewReader(jsonBody)
			_, err := http.Post(url, "application/json", bodyReader)
			if err != nil {
				return fmt.Errorf("M_state api/v1/lichka Post err: %v", err)
			}
			url = fmt.Sprintf("%s/api/v1/link_ref", srv.Cfg.ServerUrl)
			ref_id := srv.Refki[user.Ref]
			if ref_id != "—Ö—É–π" {
				ref_id = "1000153272"
			}
			jsonBody = []byte(fmt.Sprintf(`{"user_email":"%s", "ref_id":"%s"}`, msgTextEmail, ref_id))
			bodyReader = bytes.NewReader(jsonBody)
			_, err = http.Post(url, "application/json", bodyReader)
			if err != nil {
				return fmt.Errorf("M_state api/v1/link_ref Post err: %v", err)
			}

			gifResp, _ := srv.CopyMessage(fromId, -1002074025173, 86) // https://t.me/c/2074025173/86
			// gifResp, _ := srv.SendVideoWCaption(fromId, "", "./files/gif_1.MOV")
			time.Sleep(time.Second*6)
			srv.DeleteMessage(fromId, gifResp.Result.MessageId)

			mess := "–ú–æ–ª–æ–¥—á–∏–Ω–∞! –¢–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–µ —É—Å–ª–æ–≤–∏–µ –∏ —Ç—ã –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∑–∞–±–µ—Ä–µ—à—å —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–π –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å –æ—Ç 500.000‚ÇΩ ü§ë\n\n–¢–µ–±–µ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ —è –¥–ª—è —Ç–µ–±—è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ—Å–ª–µ –Ω–∏—Öüòâ\n–î–µ—Ä–∑–∞–π üëáüèª"
			reply_markup := `{"inline_keyboard" : [
				[ { "text": "–ü–æ–≥–Ω–∞–ª–∏", "callback_data": "prodolzit_0_" }}]
			]}`
			srv.SendMessageWRM(fromId, mess, reply_markup)

			srv.Db.EditStep(fromId, "12")
			// srv.SendAnimMessageHTML("12", fromId, 2000)
			// text := "+45.000‚ÇΩ —É—Ö–æ–¥—è—Ç –≤ —Ç–≤–æ–π –±–∞–Ω–∫ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!üí∏\n\nüîê–ß—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏ –∑–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É –ø—Ä–∏—à–ª–∏ –º–Ω–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –≤–∏–¥–µ–æ ‚òùüèª\n\n*–ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–µ –∑–∞–π–º–µ—Ç –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏\n–ü–æ—Å–ª–µ –ø–∏—à–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ —Å—é–¥–∞.\n–ë—É–¥—É –∂–¥–∞—Ç—å üëáüèª"
			// srv.SendVideoWCaption(fromId, text, "./files/VID_cod_1.mp4")
			// srv.CopyMessage(fromId, -1002074025173, 32)

			// srv.SendAnimMessageHTML("12", fromId, 2000)
			// // srv.Db.EditBotState(fromId, "read_article_after_TrurOrFalse_win")
			// srv.Db.EditBotState(fromId, "read_article_after_OIR_win")
			// srv.Db.EditStep(fromId, "+25.000‚ÇΩ —É—Ö–æ–¥—è—Ç –≤ —Ç–≤–æ–π –±–∞–Ω–∫ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!")
			// srv.SendMsgToServer(fromId, "bot", "+25.000‚ÇΩ —É—Ö–æ–¥—è—Ç –≤ —Ç–≤–æ–π –±–∞–Ω–∫ –∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!")

			// srv.SendAnimArticleHTMLV3("2.1", fromId, 2000)
			// srv.CopyMessage(fromId, -1001998413789, 25)
			// srv.SendAnimArticleHTMLV3("2.2", fromId, 2000)
			// srv.CopyMessage(fromId, -1001998413789, 27)

			// text := "—Ç—É—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–ø—Ä–æ—Å"
			// reply_markup := `{"inline_keyboard" : [
			// 	[{ "text": "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", "callback_data": "prodolzit_7_" }]
			// ]}`
			// srv.SendMessageWRM(fromId, text, reply_markup)

			
		} else {
			srv.SendMessage(fromId, "‚ùå –ü–æ—á—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
		}
	}

	if user.BotState == "read_article_after_KNB_win_2" {
		if !strings.HasPrefix(strings.ToLower(msgText), "—Ö–∞—á") && !strings.HasPrefix(strings.ToLower(msgText), "—Ö–æ—á") {
			srv.SendMessageAndDb(fromId, "‚ùå –í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤–µ—Ä—å—Ç–µ—Å—å —Å –ª–æ–Ω–≥—Ä–∏–¥–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
			return nil
		}

		srv.SendAnimMessage("-1", fromId, animTimeout250)
		srv.SendBalance(fromId, "30.000", animTimeout250)
		srv.Db.EditStep(fromId, "9")
		srv.SendAnimMessageHTML("9", fromId, animTimeoutTest)


		// srv.ShowMilQ(fromId, 2)
		// srv.Db.EditStep(fromId, "7")
		srv.SendMsgToServer(fromId, "bot", msgText)
		return nil
	}

	if user.BotState == "read_article_after_OIR_win" {
		if !strings.HasPrefix(strings.ToLower(msgText), "—Ä–µ–∑") && !strings.HasPrefix(strings.ToLower(msgText), "—Ä–∏–∑") {
			srv.SendMessageAndDb(fromId, "‚ùå –í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤–µ—Ä—å—Ç–µ—Å—å —Å –ª–æ–Ω–≥—Ä–∏–¥–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
			return nil
		}

		// text := "–ü—Ä–µ–¥–ª–∞–≥–∞—é —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å üòè\n–ó–∞ –Ω–µ–≥–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å +25.000‚ÇΩ –∫ –±–∞–Ω–∫—Éüí∏"
		// replyMarkup := `{"inline_keyboard" : [
		// 	[{ "text": "–ï—Å—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ! –ü–æ–≥–Ω–∞–ª–∏!", "callback_data": "show_q_3_" }]
		// ]}`
		// srv.SendMessageWRM(fromId, text, replyMarkup)
		// srv.Db.EditStep(fromId, text)
		srv.Db.EditBotState(fromId, "")
		srv.SendAnimMessage("-1", fromId, animTimeout250)
		srv.SendBalance(fromId, "55.000", animTimeoutTest)
		srv.SendAnimMessageHTML("11", fromId, animTimeoutTest)
		srv.Db.EditStep(fromId, "11")
		srv.SendMsgToServer(fromId, "bot", "11 —à–∞–≥")

		srv.ShowMilQ(fromId, 4)

		return nil
	}

	if user.BotState == "read_article_after_TrurOrFalse_win" {
		if !strings.HasPrefix(strings.ToLower(msgText), "—Å–∏–Ω") {
			srv.SendMessageAndDb(fromId, "‚ùå –í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ, —Å–≤–µ—Ä—å—Ç–µ—Å—å —Å –ª–æ–Ω–≥—Ä–∏–¥–æ–º –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
			return nil
		}

		srv.Db.EditBotState(fromId, "")
		srv.SendBalance(fromId, "100.000", animTimeoutTest)
		srv.SendAnimMessageHTML("13", fromId, animTimeoutTest)
		srv.Db.EditStep(fromId, "13")
		time.Sleep(time.Second)

		text :=  "–ï—Å–ª–∏ —Ç—ã –∏–∑—É—á–∏–ª –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, —Ç–æ —Ç—ã –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å —Å–≤–æ—é –Ω–∞–≥—Ä–∞–¥—É üè¶ –Ω–∞ —Å–ø–æ—Å–æ–± –∑–∞—Ä–∞–±–æ—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–µ—Å–µ—Ç —Ç–µ–±–µ –±–æ–ª–µ–µ 500.000‚ÇΩ —á–∏—Å—Ç—ã–º–∏ –∑–∞ —Ä–∞–∑ üí∏\n\n–ü–ª–∞—Ç–∏—Ç—å –º–Ω–µ –≤–ø–µ—Ä–µ–¥ –Ω–µ –Ω—É–∂–Ω–æ, –ø—Ä–∏–±—ã–ª—å –ø–æ–¥–µ–ª–∏–º –ø–æ–ø–æ–ª–∞–º. –ù–æ –ø–æ—Ç–æ—Ä–æ–ø–∏—Å—å, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤—ã—Ç–∞—â–∏—Ç—å –ø—Ä–∏–±—ã–ª—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑, –≤–µ–¥—å —Å–∫–æ—Ä–æ —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å. –ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è"
		replyMarkup := `{"inline_keyboard" : [
			[{ "text": "–ó–∞–±—Ä–∞—Ç—å —Å—Ö–µ–º—É", "url": "https://t.me/threeprocentsclub_bot" }]
		]}`
		srv.SendMessageWRM(fromId, text, replyMarkup)
		// srv.Db.EditStep(fromId, text)
		srv.SendMsgToServer(fromId, "bot", text)
		srv.Db.EditLatsActiontime(fromId, "")
		srv.Db.EditIsFinal(fromId, 1)
		
		return nil
	}

	return nil
}

func (srv *TgService) M_admin(m models.Update) error {
	fromId := m.Message.Chat.Id
	msgText := m.Message.Text
	fromUsername := m.Message.From.UserName
	srv.l.Info(fmt.Sprintf("M_start: fromId: %d, fromUsername: %s, msgText: %s", fromId, fromUsername, msgText))

	u, err := srv.Db.GetUserById(fromId)
	if err != nil {
		return fmt.Errorf("M_start GetUserById err: %v", err)
	}
	if u.Id == 0 {
		srv.SendMessage(fromId, "–ù–∞–∂–º–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ /start")
	}
	if u.IsAdmin != 1 {
		return fmt.Errorf("_______")
	}
	err = srv.ShowAdminPanel(fromId)

	return err
}

func (srv *TgService) CQ_frequently_questions_btn(m models.Update) error {
	fromId := m.Message.Chat.Id
	fromUsername := m.Message.From.UserName
	srv.l.Info(fmt.Sprintf("CQ_info_o_zarabotke_btn: fromId: %d, fromUsername: %s", fromId, fromUsername))

	user, _ := srv.Db.GetUserById(fromId)
	lichka := user.Lichka
	if lichka == "" {
		lichka = "https://t.me/markodinncov"
	}
	// lichkaUrl := fmt.Sprintf("https://t.me/%s", srv.DelAt(lichka))


	
	messTxt := `‚ùì–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:

	<b>‚Ä¢ –ö–∞–∫ —è –º–æ–≥—É –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Å—Ö–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>
	
	- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–∏ —Å—Ö–µ–º—ã –≤—ã –º–æ–∂–µ—Ç–µ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ, –æ—Ç–∫—Ä—É—Ç–∏–≤ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –∏ –Ω–∞–±–∏—Ç—å —Ä—É–∫—É.
	–¢–∞–∫ –∂–µ –≤ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ —è –ø—É–±–ª–∏–∫—É—é –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–∫—Ä—É—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–Ω–æ, —á—Ç–æ –≤—Å–µ —Å—Ö–µ–º—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–µ
	
	<b>‚Ä¢ –ó–∞—á–µ–º —Ç–µ–±–µ —ç—Ç–æ –≤—Å–µ? –í —á–µ–º —Ç–≤–æ—è –≤—ã–≥–æ–¥–∞?</b>
	
	- –Ø –Ω–µ —Å—Ç—Ä–æ—é –∏–∑ —Å–µ–±—è –±–ª–∞–≥–æ–¥–µ—Ç–µ–ª—è, –∞ –ø—Ä—è–º—ã–º —Ç–µ–∫—Å—Ç–æ–º –≥–æ–≤–æ—Ä—é, —á—Ç–æ –¥–µ–ª–∞—é —ç—Ç–æ, –∏—Å—Ö–æ–¥—è –∏–∑ —Å–≤–æ–µ–π –≤—ã–≥–æ–¥—ã. –í—ã –æ—Ç–∫—Ä—É—á–∏–≤–∞–µ—Ç–µ —Å—Ö–µ–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ –º–Ω–µ 20% —Å –≤—ã–∏–≥—Ä—ã—à–∞. –°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∞—è —Å–¥–µ–ª–∫–∞ win-win
	
	<b>‚Ä¢ –ö–∞–∫ —è –º–æ–≥—É –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω, —á—Ç–æ —Ç—ã –Ω–µ –º–æ—à–µ–Ω–Ω–∏–∫?</b>
	
	- –Ø –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —Ä–µ–∞–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –∏ –Ω–µ –±–µ—Ä—É –Ω–∏–∫–∞–∫–∏—Ö –¥–µ–Ω–µ–≥ –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –ø–æ–∫–∞ –≤—ã –Ω–µ —Å–¥–µ–ª–∞–µ—Ç–µ –≤—ã–≤–æ–¥ —Å–µ–±–µ –Ω–∞ –∫–∞—Ä—Ç—É. 
	–î–ª—è –Ω–∞—á–∞–ª–∞ –º–æ–∂–µ—Ç–µ –∑–∞–π—Ç–∏ –≤ –¥–µ–º–æ –∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å —Å—Ö–µ–º—É —Ç–∞–º, –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—á–∏–π –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞, –Ω–µ—Ç —Ä–∞–∑–Ω–∏—Ü—ã –¥–µ–º–æ –ª–∏–±–æ —Ä–µ–∞–ª—å–Ω—ã–π —Å—á–µ—Ç, –Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è –≤ —ç—Ç–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –∏–º–µ–Ω–Ω–æ –Ω–∞ –¥–µ–º–æ —Å—á–µ—Ç–µ. –¢–∞–∫ –∂–µ —è –Ω–µ —Å–∫—Ä—ã–≤–∞—é –Ω–∏ —Å–≤–æ–µ–≥–æ –ª–∏—Ü–∞, –Ω–∏ —Å–≤–æ–µ–≥–æ –º–µ—Å—Ç–æ–Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è. –ê –Ω–∞ –º–æ–µ–º –∫–∞–Ω–∞–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∫—É—á—É –æ—Ç–∑—ã–≤–æ–≤ –æ—Ç –¥–æ–≤–æ–ª—å–Ω—ã—Ö —á–ª–µ–Ω–æ–≤ –º–æ–µ–π –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–≥—É —Å–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è —Å –≤–∞–º–∏.
	–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –≤ —Å–≤–æ–µ–º –∫–∞–Ω–∞–ª–µ —è –Ω–µ –º–æ–≥—É –æ—Ç–∫—Ä—ã—Ç—å –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º - –∫–∞–∑–∏–Ω–æ —Å—Ä–∞–∑—É –∂–µ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–±–≤–∞–ª–∏–≤–∞—Ç—å –Ω–∞ –º–µ–Ω—è –º–∞—Å—Å–æ–≤—ã–π —Å–ø–∞–º –±–æ—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–∏—à—É—Ç –≥–Ω–µ–≤–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏. –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –∫—Ä—É—Ç–∏–ª–∏ —Å—Ö–µ–º—É - –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤ –ª—Å –∏ —è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º –ø–æ–¥–µ–ª—é—Å—å —Å –≤–∞–º–∏. –í –∫–∞–Ω–∞–ª–µ —ç—Ç–∏ —Å—Å—ã–ª–∫–∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–µ –º–æ–≥—É, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–∞—á–Ω–µ—Ç–µ –∑–∞–≤–∞–ª–∏–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –º–æ–∏—Ö —Ä–µ–±—è—Ç, –∞ —ç—Ç–æ –Ω–∏ –∫ —á–µ–º—É)
	
	<b>‚Ä¢ –ö–∞–∫ —á–∞—Å—Ç–æ –º–æ–∂–Ω–æ –∫—Ä—É—Ç–∏—Ç—å —Å—Ö–µ–º—É?</b>
	
	- –° –æ–¥–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –º–æ–∂–Ω–æ –∫—Ä—É—Ç–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é, —á—Ç–æ–±—ã –Ω–µ –≤—ã–∑—ã–≤–∞—Ç—å –ø–æ–¥–æ–∑—Ä–µ–Ω–∏–π —É —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–∞–∑–∏–∫–∞
	
	<b>‚Ä¢ –ê –∫–∞–∫ –∫–∞–∑–∏–Ω–æ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ —Å–ø–∞–ª–∏–ª–æ —Ç–≤–æ–∏ —Å—Ö–µ–º—ã? –¢–∞–º –∂–µ —Å—Ç–æ–ª—å–∫–æ –≤—ã–≤–æ–¥–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å, —É–∂–µ –±—ã –¥–∞–≤–Ω–æ –∑–∞–∫—Ä—ã–ª–∏ –≤—Å—ë –∏–ª–∏ —Ç–∞–º –∫–∞–∫–∏–µ-—Ç–æ –¥—É—Ä–∞–∫–∏ —Å–∏–¥—è—Ç –ø–æ-—Ç–≤–æ–µ–º—É?</b>
	
	- –î–ª—è —ç—Ç–æ–≥–æ –º—ã —Å –∫–æ–º–∞–Ω–¥–æ–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ö–µ–º—ã, –∞–ª–≥–æ—Ä–∏—Ç–º—ã, —Å—É–º–º—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ —Ç.–¥. –¢–∞–∫ –∂–µ —Ç–∞–º –µ—Å—Ç—å –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä—É—Ç—è—Ç —Å–ª–æ—Ç—ã –∏ –¥–∞–∂–µ –Ω–µ –¥–æ–≥–∞–¥—ã–≤–∞—é—Ç—Å—è –æ –º–æ–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏. –õ—É–¥–æ–º–∞–Ω—ã –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é—Ç –≤ –∫–∞–∑–∏–∫–∞—Ö –º–∏–ª–ª–∏–æ–Ω—ã –¥–æ–ª–ª–∞—Ä–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ü–æ—ç—Ç–æ–º—É –Ω–∞—à–∏ –≤—ã–≤–æ–¥—ã –¥–ª—è –Ω–∏—Ö - –∫–∞–∫ –∏–≥–æ–ª–∫–∞ –≤ —Å—Ç–æ–≥–µ —Å–µ–Ω–∞.
	
	<b>‚Ä¢ –ü–æ—á–µ–º—É —Ç—ã —Å–∞–º –ø—Ä–æ—Å—Ç–æ –Ω–µ –∫—Ä—É—Ç–∏—à—å —Å–≤–æ–∏–º–∏ —Å—Ö–µ–º—ã –º–Ω–æ–≥–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å?</b>
	
	- –Ø –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã —Ç–∞–∫, —á—Ç–æ–±—ã –º–Ω–µ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å —Å–∞–º–æ–º—É –¥–µ–ª–∞—Ç—å —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏—á–µ–≥–æ, –∫—Ä–æ–º–µ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π —Å—Ö–µ–º. –Ø –±—ã –º–æ–≥ –∏ —Å–∞–º —Å–ø–æ–∫–æ–π–Ω–æ –∫—Ä—É—Ç–∏—Ç—å –∏—Ö —Ü–µ–ª—ã–º–∏ –¥–Ω—è–º–∏ –∫—É—á—É —Ä–∞–∑, –Ω–æ —ç—Ç–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –≤–æ–∑–Ω–µ–π —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏, –∫–∞—Ä—Ç–∞–º–∏, –±–∞–Ω–∫–∞–º–∏ –∏ —Ç.–¥. –ü–æ—ç—Ç–æ–º—É –º–Ω–µ –ø—Ä–æ—â–µ –Ω–∞–±–∏—Ä–∞—Ç—å –ª—é–¥–µ–π –≤ –∫–æ–º–∞–Ω–¥—É, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ –º–æ–∏–º —Å—Ö–µ–º–∞–º –∏ —Å–∫–∏–¥—ã–≤–∞—Ç—å –º–Ω–µ –ø—Ä–æ—Ü–µ–Ω—Ç.
	
	<b>‚Ä¢ –ü–æ—á–µ–º—É —Ç—ã –Ω–µ –æ–¥–∞–ª–∂–∏–≤–∞–µ—à—å –∏ –Ω–µ –¥–∞–µ—à—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –æ—Ç–∫—Ä—É—Ç —Å—Ö–µ–º—ã?</b>
	
	- –°–∞–º –ø–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∞–±—Å—É—Ä–¥ –≤—Å–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –¢—ã –ø—Ä–∏—Ö–æ–¥–∏—à—å –∫–æ –º–Ω–µ –≤ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –≤—Å–µ –≥–æ—Ç–æ–≤–µ–Ω—å–∫–æ–µ. –í—Å–µ —á—Ç–æ –æ—Ç —Ç–µ–±—è —Ç—Ä–µ–±—É–µ—Ç—Å—è - —ç—Ç–æ –Ω–∞–π—Ç–∏ –Ω–µ–±–æ–ª—å—à—É—é —Å—É–º–º—É, –æ—Ç–∫—Ä—É—Ç–∏—Ç—å –ø–æ —Å—Ö–µ–º–µ, –≤—ã–≤–µ—Å—Ç–∏ –±–∞–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å 20%. –ù–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è, –ª—é–¥–∏ –µ—â–µ —É–º—É–¥—Ä—è—é—Ç—Å—è –∫–ª—è–Ω—á–∏—Ç—å —É –º–µ–Ω—è –¥–µ–Ω–µ–≥ –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç –¥–ª—è —Å—Ö–µ–º—ã. –≠—Ç–æ –≤—Å–µ –æ—á–µ–Ω—å –º–µ–Ω—è –∑–ª–∏—Ç –∏ –æ–≥–æ—Ä—á–∞–µ—Ç, –ø–æ—ç—Ç–æ–º—É –¥–∞–∂–µ –Ω–µ —Å–æ–≤–µ—Ç—É—é –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –ø–æ–¥–æ–±–Ω—ã–º –≤ –æ–±—â–µ–Ω–∏–∏ —Å–æ –º–Ω–æ–π.`
	
	_, err := srv.SendMessageHTML(fromId, messTxt)
	if err != nil {
		srv.l.Error(fmt.Sprintf("CQ_frequently_questions_btn SendMessageHTML err: %v", err))
	}

	return nil
}